{"version":3,"sources":["redux/actions.js","redux/actionTypes.js","main/Window.js","main/Header.js","apps/AddWidget.js","main/Settings.js","main/StaticWindow.js","constants.js","main/MinBar.js","apps/Test.js","main/WidgetManager.js","serviceWorker.js","redux/reducers/windows.js","redux/reducers/settings.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["hideWindow","index","type","payload","toggleShowing","showing","updateIndex","viewid","ConnectedWindow","mapStateToProps","mapDispatchToProps","mergeProps","options","component","connect","forwardRef","React","connectAndForwardRef","minimizeWindow","title","width","height","url","children","appid","minimized","zIndex","frameRef","useRef","windowRef","topRef","ref","useState","dimension","setDimension","loading","setLoading","pointerEvents","top","position","paddingBottom","paddingTop","paddingLeft","frameStyle","setFrameStyle","maximized","setMaximized","max","isInitialMount","saveDimensions","currentX","currentY","initialX","initialY","xOffset","yOffset","active","useEffect","current","f","R","transform","style","setTranslate","display","window","addEventListener","parent","innerWidth","innerHeight","drag","e","stopPropagation","touches","clientX","clientY","xPos","yPos","preventDefault","cancelBubble","returnValue","className","onMouseMove","onMouseDown","onMouseUp","event","onClick","size","overflow","Spinner","animation","variant","key","onLoad","frameBorder","src","state","showWindow","windows","Dropdown","Toggle","id","Menu","windowKey","Item","apps","Button","createWindow","single","deletable","titleError","setTitleError","idError","setIdError","urlError","setUrlError","whError","setWhError","setSingle","setDeletable","success","setSuccess","Form","Group","Label","Control","placeholder","isInvalid","onChange","Feedback","Row","Col","required","Check","checked","label","isValidNumber","Number","NaN","error","value","deleteWindow","resetDefault","settings","columns","dataField","text","align","editable","formatter","cell","row","setAppName","target","rel","showingConfirm","setShowingConfirm","appName","showingConfirmReset","setShowingConfirmReset","handleClose","handleCloseConfirm","handleCloseConfirmReset","Modal","show","onHide","backdrop","keyboard","Header","closeButton","Container","marginLeft","md","offset","Title","Body","keyField","data","item","Footer","win","fappid","view","BUILT_IN_APPS","addwidget","test","win_array","unminimizeWindow","hideWindowId","uminimizeUpdateIndex","Test","count","setCount","loadApps","Boolean","location","hostname","match","appView","opened","initialState","save","newstate","localStorage","setItem","JSON","stringify","load","getItem","parse","updateIn","path","val","obj","combineReducers","action","length","instance","fviewid","fzIndex","min","console","log","enhancers","compose","__REDUX_DEVTOOLS_EXTENSION__","createStore","rootReducer","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.40e5f8a3.chunk.js","sourcesContent":["import {\r\n  SHOW_WINDOW,\r\n  CREATE_WINDOW,\r\n  HIDE_WINDOW,\r\n  TOGGLE_SETTINGS,\r\n  UPDATE_INDEX,\r\n  MINIMIZE_WINDOW,\r\n  UNMINIMIZE_WINDOW,\r\n  UNMINIMIZE_UPDATE_INDEX,\r\n  HIDE_WINDOW_ID,\r\n  DELETE_WINDOW,\r\n  LOAD_APPS,\r\n  RESET_DEFAULT\r\n} from \"./actionTypes\";\r\n\r\n\r\nexport const hideWindow = index => ({\r\n  type: HIDE_WINDOW,\r\n  payload: { index }\r\n})\r\n\r\nexport const showWindow = appid => ({\r\n  type: SHOW_WINDOW,\r\n  payload: { appid }\r\n})\r\n\r\nexport const createWindow = (appid, title, width, height, url, single, deletable) => ({\r\n  type: CREATE_WINDOW,\r\n  payload: { appid, title, width, height, url, single, deletable }\r\n})\r\n\r\n\r\nexport const toggleShowing = (showing) => ({\r\n  type: TOGGLE_SETTINGS,\r\n  payload: { showing }\r\n})\r\n\r\n\r\nexport const updateIndex = (viewid) => ({\r\n  type: UPDATE_INDEX,\r\n  payload: { viewid }\r\n})\r\n\r\nexport const minimizeWindow = (index) => ({\r\n  type: MINIMIZE_WINDOW,\r\n  payload: { index }\r\n})\r\n\r\nexport const unminimizeWindow = (index) => ({\r\n  type: UNMINIMIZE_WINDOW,\r\n  payload: { index }\r\n})\r\n\r\nexport const uminimizeUpdateIndex = (viewid) => ({\r\n  type: UNMINIMIZE_UPDATE_INDEX,\r\n  payload: { viewid }\r\n})\r\n\r\nexport const hideWindowId = (viewid) => ({\r\n  type: HIDE_WINDOW_ID,\r\n  payload: { viewid }\r\n})\r\n\r\n\r\nexport const deleteWindow = (appid) => ({\r\n  type: DELETE_WINDOW,\r\n  payload: { appid }\r\n})\r\n\r\nexport const loadApps = () => ({\r\n  type: LOAD_APPS\r\n})\r\n\r\nexport const resetDefault = () => ({\r\n  type: RESET_DEFAULT\r\n})\r\n\r\n\r\n\r\n\r\n\r\n","export const SHOW_WINDOW = \"SHOW_WINDOW\"\r\nexport const CREATE_WINDOW = \"CREATE_WINDOW\"\r\nexport const HIDE_WINDOW = \"HIDE_WINDOW\"\r\nexport const TOGGLE_SETTINGS = \"TOGGLE_SETTINGS\"\r\nexport const UPDATE_INDEX = \"UPDATE_INDEX\"\r\nexport const MINIMIZE_WINDOW = \"MINIMIZE_WINDOW\"\r\nexport const UNMINIMIZE_WINDOW = \"UNMINIMIZE_WINDOW\"\r\nexport const UNMINIMIZE_UPDATE_INDEX = \"UNMINIMIZE_UPDATE_INDEX\"\r\nexport const HIDE_WINDOW_ID = \"HIDE_WINDOW_ID\"\r\nexport const DELETE_WINDOW = \"DELETE_WINDOW\"\r\nexport const LOAD_APPS = \"LOAD_APPS\"\r\nexport const RESET_DEFAULT = \"RESET_DEFAULT\"","import React, { useState, useRef, useEffect } from 'react';\r\nimport '../css/App.css';\r\nimport { MdClose, MdCropSquare, MdRemove, MdFilterNone } from 'react-icons/md';\r\nimport { Spinner } from 'react-bootstrap'\r\nimport '../css/boostrap.min.css'\r\nimport * as R from 'ramda'\r\nimport { hideWindow, updateIndex, minimizeWindow } from \"../redux/actions\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Window({ title, width, height, url, appid, children, minimized, updateIndex, hideWindow, minimizeWindow, zIndex, index, viewid }) {\r\n  const frameRef = useRef()\r\n  const windowRef = useRef()\r\n  const topRef = useRef()\r\n  const ref = useRef()\r\n  const [dimension, setDimension] = useState({ width: width, height: height })\r\n  const [loading, setLoading] = useState(true)\r\n  const [frameStyle, setFrameStyle] = useState(\r\n    {\r\n      pointerEvents: \"none\",\r\n      top: 0,\r\n      position: \"absolute\", zIndex: zIndex, width: `${width + 600}px`, paddingBottom: `${height + 500}px`, paddingTop: `300px`, paddingLeft: \"300px\"\r\n    }\r\n  )\r\n  const [maximized, setMaximized] = useState(false)\r\n\r\n  const max = useRef(false)\r\n\r\n  const isInitialMount = useRef(true);\r\n  const saveDimensions = useRef({})\r\n  const currentX = useRef()\r\n  const currentY = useRef()\r\n  const initialX = useRef()\r\n  const initialY = useRef()\r\n  const xOffset = useRef(0)\r\n  const yOffset = useRef(0)\r\n  const active = useRef(false)\r\n\r\n  useEffect(() => {\r\n    if (isInitialMount.current) {\r\n      isInitialMount.current = false;\r\n    } else {\r\n      if (maximized) {\r\n\r\n        setFrameStyle(f => R.merge(f, {\r\n\r\n          transform: \"none\",\r\n          top: 50,\r\n          width: \"100%\",\r\n          height: \"calc(100% - 30px)\",\r\n          paddingBottom: 0,\r\n          paddingTop: 0,\r\n          paddingLeft: 0\r\n\r\n        }))\r\n\r\n        windowRef.current.style.width = \"100%\"\r\n        topRef.current.style.width = \"100%\"\r\n        setTranslate(0, 0)\r\n\r\n      }\r\n      else {\r\n        setTranslate(currentX.current, currentY.current)\r\n        setFrameStyle(f => R.merge(f, {\r\n          top: 0,\r\n          height: null,\r\n          position: \"absolute\",\r\n          width: `${width + 600}px`,\r\n          paddingBottom: `${height + 500}px`,\r\n          paddingTop: `300px`,\r\n          paddingLeft: \"300px\",\r\n\r\n\r\n        }))\r\n\r\n      }\r\n    }\r\n  }, [maximized])\r\n\r\n  useEffect(() => {\r\n    setFrameStyle(f => R.merge(f, {\r\n      zIndex: zIndex\r\n    }))\r\n  }, [zIndex])\r\n\r\n  useEffect(() => {\r\n    if (minimized) {\r\n      setFrameStyle(f => R.merge(f, {\r\n        display: \"none\"\r\n      }))\r\n    }\r\n    else {\r\n      setFrameStyle(f => R.merge(f, {\r\n        display: \"block\"\r\n      }))\r\n    }\r\n  }, [minimized])\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    setTranslate(-300, -250)\r\n    xOffset.current = -300\r\n    yOffset.current = -250\r\n    window.addEventListener('resize', () => {\r\n      if (max.current) {\r\n        setDimension({ width: window.parent.innerWidth - 7, height: window.parent.innerHeight - 137 })\r\n      }\r\n\r\n    });\r\n  }, [])\r\n\r\n\r\n  function dragStart(e) {\r\n    active.current = true;\r\n    e.stopPropagation()\r\n    if (e.type === \"touchstart\") {\r\n      initialX.current = e.touches[0].clientX - xOffset.current;\r\n      initialY.current = e.touches[0].clientY - yOffset.current;\r\n    } else {\r\n      initialX.current = e.clientX - xOffset.current;\r\n      initialY.current = e.clientY - yOffset.current;\r\n    }\r\n    updateIndex(viewid)\r\n    setFrameStyle(\r\n      R.assoc(\"pointerEvents\", \"auto\", frameStyle)\r\n    )\r\n\r\n  }\r\n\r\n\r\n  const dragEnd = (e) => {\r\n    initialX.current = currentX.current;\r\n    initialY.current = currentY.current;\r\n\r\n    active.current = false;\r\n    stopPropagation(e)\r\n    setFrameStyle(\r\n      R.assoc(\"pointerEvents\", \"none\", frameStyle)\r\n    )\r\n  }\r\n\r\n  const drag = (e) => {\r\n    if (active.current && !maximized) {\r\n      stopPropagation(e)\r\n\r\n      if (e.type === \"touchmove\") {\r\n        currentX.current = e.touches[0].clientX - initialX.current;\r\n        currentY.current = e.touches[0].clientY - initialY.current;\r\n      } else {\r\n        currentX.current = e.clientX - initialX.current;\r\n        currentY.current = e.clientY - initialY.current;\r\n      }\r\n\r\n      xOffset.current = currentX.current;\r\n      yOffset.current = currentY.current;\r\n\r\n      setTranslate(currentX.current, currentY.current);\r\n    }\r\n  }\r\n\r\n  const setTranslate = (xPos, yPos) => {\r\n    ref.current.style.transform = \"translate3d(\" + xPos + \"px, \" + yPos + \"px, 0)\";\r\n\r\n  }\r\n\r\n\r\n\r\n  const stopPropagation = (e) => {\r\n    if (e.stopPropagation) e.stopPropagation();\r\n    if (e.preventDefault) e.preventDefault();\r\n    e.cancelBubble = true;\r\n    e.returnValue = false;\r\n    return false;\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"frame\" onMouseMove={drag} style={frameStyle} ref={ref}>\r\n        <div className=\"frame-border\" style={\r\n          R.compose(\r\n            R.assoc(\"paddingTop\", 4),\r\n            R.assoc(\"paddingLeft\", 4),\r\n            R.assoc(\"paddingRight\", 4),\r\n            R.assoc(\"width\", (maximized ? R.prop(\"width\", frameStyle) : null)),\r\n            R.assoc(\"top\", null),\r\n            R.assoc(\"paddingBottom\", `${height + 5}px`),\r\n            R.assoc(\"pointerEvents\", \"auto\")\r\n          )(frameStyle)\r\n\r\n        }>\r\n          <div onMouseDown={dragStart} onMouseUp={dragEnd} ref={topRef} onMouseMove={drag} className=\"topbar\" style={{ width: `${dimension.width}px` }}>\r\n            <MdClose onMouseDown={(event) => { stopPropagation(event) }} onClick={() => { hideWindow(index) }} className=\"hover\" size={21} />\r\n            {maximized ? <MdFilterNone className=\"hover\" size={21} onClick={() => {\r\n              max.current = false\r\n              setMaximized(!maximized)\r\n              setDimension({ width: saveDimensions.current.width, height: saveDimensions.current.height })\r\n\r\n            }\r\n            } />\r\n              : <MdCropSquare onClick={() => {\r\n                max.current = true\r\n                saveDimensions.current = { width: dimension.width, height: dimension.height }\r\n                setMaximized(!maximized)\r\n                setDimension({ width: window.parent.innerWidth - 7, height: window.parent.innerHeight -  137})\r\n\r\n              }} className=\"hover\" size={21} />\r\n\r\n            }\r\n            <MdRemove onClick={() => { minimizeWindow(index) }} className=\"hover\" size={21} />\r\n            <h5 className={\"float-right\"}>{title}</h5>\r\n\r\n          </div>\r\n          <div className=\"window\" ref={windowRef} style={{ width: `${dimension.width}px`, height: `${dimension.height}px`, pointerEvents: (R.propEq(\"pointerEvents\", \"auto\", frameStyle) ? \"none\" : \"auto\"), overflow: (R.isNil(children) ? \"hidden\" : \"auto\")  }}>\r\n            {children && children}\r\n            {loading && !children && <Spinner size=\"lg\" animation=\"border\" variant=\"secondary\" className=\"frameloading\" />}\r\n            {!children && <iframe key={viewid}  ref={frameRef} onLoad={() => setLoading(false)} frameBorder=\"0\" title={title} src={url} className={\"framestyle\"} height={`${dimension.height}px`} width={`${dimension.width}px`}/>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nconst connectAndForwardRef = (\r\n  mapStateToProps = null,\r\n  mapDispatchToProps = null,\r\n  mergeProps = null,\r\n  options = {},\r\n) => component => connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n  mergeProps,\r\n  {\r\n    ...options,\r\n    forwardRef: true,\r\n  },\r\n)(React.forwardRef(component));\r\n\r\nconst ConnectedWindow = connectAndForwardRef(null, { hideWindow, updateIndex, minimizeWindow })(Window)\r\n\r\nexport default ConnectedWindow;\r\n\r\n//export default React.forwardRef(Window);\r\n\r\n","import React from 'react'\r\nimport { Dropdown, Button } from 'react-bootstrap'\r\nimport * as R from 'ramda'\r\nimport { connect } from 'react-redux'\r\nimport { showWindow, toggleShowing } from '../redux/actions'\r\n\r\nconst Header = ({windows, showWindow, toggleShowing}) => {\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"header-apps-button\">\r\n\r\n                <Dropdown>\r\n                    <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\r\n                        Apps\r\n                </Dropdown.Toggle>\r\n\r\n                    <Dropdown.Menu>\r\n                        {\r\n                        R.compose(\r\n                        R.map(([key, windowKey]) => {\r\n                            return   <Dropdown.Item key={windowKey} onClick={ () => showWindow(windowKey)}>{R.prop(\"title\", R.prop(windowKey, windows.apps))}</Dropdown.Item>\r\n                        }),\r\n                        R.toPairs,\r\n                        )(R.keys(windows.apps))\r\n                    }\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n\r\n            </div>\r\n            <div className=\"header-logo\">\r\n                <span>WAIM</span>\r\n            </div>\r\n            <div className=\"header-apps-button\">\r\n\r\n                <Button onClick={()=> toggleShowing(true)} variant=\"secondary\">Settings</Button>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return state\r\n  };\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { showWindow, toggleShowing }\r\n  )(Header)","import React, { useEffect, useRef, useState } from 'react';\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { createWindow, updateIndex } from \"../redux/actions\";\r\nimport * as R from 'ramda'\r\nconst AddWidget = ({ createWindow }) => {\r\n  const title = useRef();\r\n  const url = useRef();\r\n  const id = useRef();\r\n  const width = useRef()\r\n  const height = useRef()\r\n  const [titleError, setTitleError] = useState(false)\r\n  const [idError, setIdError] = useState(false)\r\n  const [urlError, setUrlError] = useState(false)\r\n  const [whError, setWhError] = useState(false)\r\n  const [single, setSingle] = useState(false)\r\n  const [deletable, setDeletable] = useState(true)\r\n  const [success, setSuccess] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setSuccess(false)\r\n  }, [single, deletable])\r\n  return (\r\n    <Form className=\"p-5\">\r\n      <Form.Group>\r\n        <Form.Label>Widget ID</Form.Label>\r\n        <Form.Control ref={id} placeholder=\"Widget ID\" isInvalid={idError} onChange={e => {setIdError(false); setSuccess(false)}} />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          ID cannot be empty or a duplicate\r\n            </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group>\r\n        <Form.Label>Widget Title</Form.Label>\r\n        <Form.Control ref={title} placeholder=\"Widget Title Name\" isInvalid={titleError} onChange={e => {setTitleError(false); setSuccess(false)}} />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          Title cannot be empty\r\n            </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group>\r\n        <Form.Label>Width and Height</Form.Label>\r\n        <Form.Row>\r\n          <Col>\r\n            <Form.Control ref={width} onChange={e => {setWhError(false);  setSuccess(false)}} isInvalid={whError} placeholder=\"Width\" />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Width cannot be empty AND must be integers\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n          <Col>\r\n            <Form.Control ref={height} onChange={e => {setWhError(false) ; setSuccess(false)}} isInvalid={whError} placeholder=\"Height\" />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Height cannot be empty AND must be integers\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Form.Row>\r\n      </Form.Group>\r\n\r\n      <Form.Group>\r\n        <Form.Label>Widget URL</Form.Label>\r\n        <Form.Control ref={url} placeholder=\"Widget URL\" required isInvalid={urlError} onChange={e => {setUrlError(false); setSuccess(false)}} />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          URL cannot be empty\r\n            </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group>\r\n        <Form.Label>Single Instance</Form.Label>\r\n        <Form.Check checked={single} onChange={e => setSingle(!single)} type=\"checkbox\" label=\"Allow Single Instance of the App?\" />\r\n      </Form.Group>\r\n      <Form.Group>\r\n        <Form.Label>Deletable</Form.Label>\r\n        <Form.Check checked={deletable} onChange={e => setDeletable(!deletable)} type=\"checkbox\" label=\"Allow app to be deleted?\" />\r\n      </Form.Group>\r\n\r\n      <Button variant=\"secondary\"\r\n        onClick={e => {\r\n          const isValidNumber = R.both(R.is(Number), R.complement(R.equals(NaN)));\r\n          let error = false\r\n          if (R.isEmpty(id.current.value)) {\r\n            setIdError(true)\r\n            error = true\r\n          }\r\n          if (R.isEmpty(title.current.value)) {\r\n            setTitleError(true)\r\n            error = true\r\n          }\r\n          if (R.isEmpty(url.current.value)) {\r\n            setUrlError(true)\r\n            error = true\r\n          }\r\n          if (R.isEmpty(width.current.value) || R.isEmpty(height.current.value) || !isValidNumber(Number(width.current.value)) || !isValidNumber(Number(height.current.value))) {\r\n            setWhError(true)\r\n            error = true\r\n          }\r\n          if (error) {\r\n            return\r\n          }\r\n          createWindow(id.current.value, title.current.value, Number(width.current.value), Number(height.current.value), url.current.value, single, deletable)\r\n          updateIndex(id.current.value)\r\n          setSuccess(true)\r\n        }\r\n        }\r\n      >\r\n        Submit\r\n      </Button>\r\n      {success && <Form.Group><Form.Label className=\"text-success\">\r\n        Widget successfully created\r\n            </Form.Label></Form.Group>}\r\n\r\n    </Form >)\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  { createWindow }\r\n)(AddWidget)","import React, { useState, useEffect } from 'react'\r\nimport { Button, Modal, Row, Col, Container } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { toggleShowing, deleteWindow, resetDefault } from '../redux/actions'\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport { AiOutlineDelete } from 'react-icons/ai'\r\n\r\nimport * as R from 'ramda'\r\n\r\n\r\n\r\n\r\n\r\nconst Settings = ({ windows, settings, toggleShowing, deleteWindow, resetDefault }) => {\r\n    const linkFormatter = (cell, row) => {\r\n        return (\r\n            <>\r\n                \r\n               { \r\n                R.pathEq([\"apps\", R.prop(\"appid\", row), \"deletable\"], true, windows) &&\r\n                    <Button onClick={() => setAppName(R.prop(\"appid\", row))} variant=\"secondary\" target=\"_blank\" rel=\"noopener noreferrer\"><AiOutlineDelete size={20} /></Button>\r\n                }\r\n            </>\r\n        );\r\n\r\n    }\r\n\r\n    const columns = [{\r\n        dataField: 'appid',\r\n        text: 'ID'\r\n    }, {\r\n        dataField: 'title',\r\n        text: 'Title'\r\n    }, {\r\n        dataField: 'url',\r\n        text: 'URL'\r\n    },\r\n    {\r\n        dataField: 'control',\r\n        text: 'Controls',\r\n        align: 'center',\r\n        editable: false,\r\n        formatter: linkFormatter,\r\n    },\r\n    \r\n    \r\n    ];\r\n    \r\n    const [showingConfirm, setShowingConfirm] = useState(false)\r\n    const [appName, setAppName] = useState(\"\")\r\n    const [showingConfirmReset, setShowingConfirmReset] = useState(false)\r\n    const handleClose = () => toggleShowing(false);\r\n    const handleCloseConfirm = () => setShowingConfirm(false)\r\n    const handleCloseConfirmReset = () => setShowingConfirmReset(false)\r\n    const handleDelete = () => {\r\n        deleteWindow(R.path([\"apps\", appName, \"appid\"], windows))\r\n        setShowingConfirm(false)\r\n    }\r\n\r\n    const handleResetDefault = () => {\r\n        resetDefault()\r\n        setShowingConfirmReset(false)\r\n    }\r\n\r\n    useEffect(()=> {\r\n        if(!R.isEmpty(appName))\r\n            setShowingConfirm(true)\r\n    }, [appName])\r\n\r\n    useEffect(()=>{\r\n        if(!showingConfirm)\r\n            setAppName(\"\")\r\n    }, [showingConfirm])\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <Modal\r\n                    show={settings.showing}\r\n                    onHide={handleClose}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                    size=\"lg\"\r\n                    className=\"full-modal\"\r\n                    variant=\"secondary\"\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Container style={{marginLeft: 0}}>\r\n                    <Row>\r\n                        <Col md={{offset: 0 }}>\r\n                        <Modal.Title>Settings</Modal.Title>\r\n                        </Col>\r\n                        <Col md= {{offset: 3 }}>\r\n                        <Button onClick={()=>setShowingConfirmReset(true)}variant=\"secondary\">Reset to Default</Button>\r\n                        </Col>\r\n                    </Row></Container>\r\n\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <BootstrapTable\r\n                            keyField=\"appid\"\r\n                            data={R.compose(\r\n                                R.values,\r\n                                R.map((item) => { return item })\r\n                            )(windows.apps)}\r\n                            columns={columns}\r\n                        />\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Close\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                <Modal\r\n                    show={showingConfirm}\r\n                    onHide={handleCloseConfirm}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                    size=\"lg\"\r\n                    variant=\"secondary\"\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Delete Confirmation</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        Are you sure you want to delete <b>{appName}</b>? All instances will be closed.\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleCloseConfirm}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"danger\" onClick={handleDelete}>Delete</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                <Modal\r\n                    show={showingConfirmReset}\r\n                    onHide={handleCloseConfirmReset}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                    size=\"lg\"\r\n                    variant=\"secondary\"\r\n                >\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Reset to Default</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        Are you sure you want to reset to default? All apps added and/or removed will be reset. Any open instance will be closed.\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleCloseConfirmReset}>\r\n                            No\r\n                        </Button>\r\n                        <Button variant=\"danger\" onClick={handleResetDefault}>Reset</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return state\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { toggleShowing, deleteWindow, resetDefault }\r\n)(Settings)","import { connect } from 'react-redux'\r\nimport React from 'react';\r\nimport * as R from 'ramda'\r\nimport Window from './Window'\r\n\r\n\r\nconst StaticWindow = ({ windows, children, appid }, ref) => {\r\n\r\n  return (\r\n    <>\r\n    {\r\n        R.compose(\r\n        R.map(([index, win]) => {\r\n        \r\n          const fappid = R.prop(\"appid\", win)\r\n          const key = R.prop(\"viewid\", win)\r\n          const zIndex = R.prop(\"zIndex\", win)\r\n          if (R.equals(appid, fappid)) {\r\n            const window = R.path([\"apps\", appid], windows)\r\n            return <Window \r\n              appid={window.appid}\r\n              title={window.title}\r\n              width={window.width}\r\n              key={key}\r\n              zIndex={zIndex}\r\n              viewid={key}\r\n              index={index}\r\n              minimized={R.prop(\"minimized\", win)}\r\n              url={window.url}\r\n              height={window.height}>{children}</Window>\r\n          }\r\n\r\n        }),\r\n        R.toPairs,\r\n    )(windows.view)\r\n        }\r\n     \r\n    </>\r\n  )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return state\r\n};\r\n\r\n\r\nconst connectAndForwardRef = (\r\n  mapStateToProps = null,\r\n  mapDispatchToProps = null,\r\n  mergeProps = null,\r\n  options = {},\r\n) => component => connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n  mergeProps,\r\n  {\r\n    ...options,\r\n    forwardRef: true,\r\n  },\r\n)(React.forwardRef(component));\r\n\r\nconst ConnectedWindow = connectAndForwardRef(mapStateToProps, null)(StaticWindow)\r\n\r\nexport default ConnectedWindow;\r\n","export const BUILT_IN_APPS = {\r\n    addwidget: {\r\n        appid: \"addwidget\",\r\n        title: \"Add Widget\",\r\n        width: 800,\r\n        height: 600,\r\n        single: true\r\n    },\r\n\r\n    test: {\r\n        appid: \"test\",\r\n        title: \"Test App\",\r\n        width: 1000,\r\n        height: 300,\r\n        deletable: true\r\n    }\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { uminimizeUpdateIndex, hideWindow, updateIndex, hideWindowId, unminimizeWindow } from '../redux/actions'\r\nimport * as R from 'ramda'\r\nimport {AiOutlineCloseCircle} from 'react-icons/ai'\r\n\r\n\r\n\r\nconst MinBar = ({ children, index, uminimizeUpdateIndex,hideWindowId, unminimizeWindow, className, hideWindow }) => {\r\n\r\n    return (\r\n        <div className={\"noselect min-bar \" + className} onClick={()=> {uminimizeUpdateIndex(index) }}>\r\n            <div className=\"min-bar-close\"> <AiOutlineCloseCircle onClick={e=>{hideWindowId(index); e.stopPropagation();}} size={20}/></div>\r\n            <div className=\"min-bar-title\">{children}</div>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    const windows = R.prop(\"windows\", state)\r\n    if(R.isNil(windows)){\r\n        return\r\n    }\r\n    const win_array = R.compose(\r\n        R.values,\r\n        R.map((item) => {return item})\r\n       )(windows)\r\n    \r\n    return R.assocPath([\"windows\", \"apps\"], win_array, state)\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { unminimizeWindow, hideWindowId, uminimizeUpdateIndex, hideWindow, updateIndex }\r\n)(MinBar)","import React, {useState } from 'react';\r\nconst Test = () => {\r\n  const [count, setCount] = useState(0)\r\n  return (\r\n      <>\r\n      <p>Button has been clicked {count} times!</p>\r\n      <button onClick={()=>setCount(count+1)}>Click me!</button>\r\n      </>\r\n   )\r\n}\r\n\r\nexport default Test;","import React, { useState } from 'react';\r\nimport '../css/App.css';\r\nimport Window from './Window'\r\nimport Header from './Header'\r\nimport * as R from 'ramda'\r\nimport AddWidget from '../apps/AddWidget'\r\nimport { connect } from 'react-redux'\r\nimport {loadApps} from '../redux/actions'\r\nimport Settings from './Settings'\r\nimport StaticWindow from './StaticWindow'\r\nimport {BUILT_IN_APPS} from '../constants'\r\nimport MinBar from './MinBar';\r\nimport Test from '../apps/Test';\r\n\r\nconst WidgetManager = ({ windows, loadApps }) => {\r\n  useState(()=>{\r\n    loadApps()\r\n  }, [])\r\n  return (\r\n\r\n    <>\r\n      <Header windows={windows} />\r\n        {/* Add all static windows/apps below */}\r\n        <StaticWindow appid=\"test\" >\r\n          <Test />\r\n        </StaticWindow>\r\n        <StaticWindow appid=\"addwidget\" >\r\n          <AddWidget />\r\n        </StaticWindow>\r\n      \r\n      {\r\n        R.compose(\r\n          R.map(([index, win]) => {\r\n            const appid = R.prop(\"appid\", win)\r\n            const key = R.prop(\"viewid\", win)\r\n            const zIndex = R.prop(\"zIndex\", win)\r\n            if (R.has(appid, BUILT_IN_APPS)) {\r\n              return null\r\n            }\r\n            const window = R.path([\"apps\", appid], windows)\r\n            return  <Window \r\n              appid={window.appid}\r\n              title={window.title}\r\n              url={window.url}\r\n              width={window.width}\r\n              zIndex={zIndex}\r\n              index={index}\r\n              key={key}\r\n              viewid={key}\r\n              minimized={R.prop(\"minimized\", win)}\r\n              height={window.height} />\r\n          }),\r\n          R.toPairs,\r\n        )(windows.view)\r\n      }\r\n      <Settings/>\r\n      <div className=\"footer\">\r\n      {\r\n        \r\n         R.compose(\r\n        \r\n          R.map(([index, win]) => {\r\n              const appid = R.prop(\"appid\", win)\r\n              const viewid = R.prop(\"viewid\", win)\r\n              const window = R.path([\"apps\", appid], windows)\r\n              return <MinBar className={R.propEq(\"minimized\", true, win) ? \"\" : \"showing\"} index={viewid} key={index} appid={appid}>{R.prop(\"title\", window)}</MinBar>\r\n          }),\r\n          R.toPairs,\r\n\r\n        )(windows.view)\r\n      }\r\n      </div>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return state\r\n};\r\n\r\nexport default connect(mapStateToProps, {loadApps})(WidgetManager);\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {\r\n  CREATE_WINDOW,\r\n  SHOW_WINDOW,\r\n  HIDE_WINDOW,\r\n  UPDATE_INDEX,\r\n  MINIMIZE_WINDOW,\r\n  UNMINIMIZE_WINDOW,\r\n  UNMINIMIZE_UPDATE_INDEX,\r\n  HIDE_WINDOW_ID,\r\n  DELETE_WINDOW,\r\n  LOAD_APPS,\r\n  RESET_DEFAULT\r\n} from \"../actionTypes\";\r\nimport * as R from 'ramda'\r\nimport { BUILT_IN_APPS } from '../../constants'\r\nlet appView = 0;\r\nlet opened = {}\r\nconst appName = \"waim\"\r\nconst initialState = {\r\n  apps: BUILT_IN_APPS,\r\n  view: []\r\n};\r\n\r\nconst save = (newstate) => {\r\n  const myStorage = window.localStorage;\r\n  myStorage.setItem(appName, JSON.stringify(newstate.apps));\r\n  return newstate\r\n}\r\n\r\nconst load = (newstate) => {\r\n  const myStorage = window.localStorage;\r\n  const apps = myStorage.getItem(appName);\r\n  return R.assoc(\"apps\", R.isNil(apps) ? BUILT_IN_APPS : JSON.parse(apps), newstate)\r\n}\r\n\r\nconst updateIn = R.curry((path, val, obj) => R.compose(\r\n  R.set(R.__, val, obj),\r\n  R.apply(R.compose),\r\n  R.map(R.cond([[R.is(Number), R.lensIndex], [R.T, R.lensProp]]))\r\n)(path));\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SHOW_WINDOW: {\r\n      const { appid } = action.payload\r\n      if (R.pathEq([\"apps\", appid, \"single\"], true, state) && R.propEq(appid, true, opened)) {\r\n        return state\r\n      }\r\n      appView++\r\n      opened[appid] = true\r\n      return R.compose(\r\n        R.assoc(\"view\", R.append({ appid, viewid: appView, zIndex: appView }, state.view))\r\n      )(state)\r\n    }\r\n\r\n    case HIDE_WINDOW: {\r\n      const { index } = action.payload\r\n\r\n      delete opened[R.path([\"view\", index, \"appid\"], state)]\r\n      const zIndex = R.path([\"view\", Number(index), \"zIndex\"], state)\r\n      const viewid = R.path([\"view\", Number(index), \"viewid\"], state)\r\n      const length = R.length(state.view)\r\n      const instance = R.compose(\r\n        R.map(([index, win]) => {\r\n          const fviewid = R.prop(\"viewid\", win)\r\n          const fzIndex = R.prop(\"zIndex\", win)\r\n          if (R.equals(fviewid, viewid)) {\r\n            return R.assoc(\"zIndex\", Number(length), win)\r\n          }\r\n          else {\r\n            if (Number(fzIndex) > zIndex) {\r\n              return R.assoc(\"zIndex\", Number(fzIndex) - 1, win)\r\n            }\r\n            else {\r\n              return R.assoc(\"zIndex\", fzIndex, win)\r\n            }\r\n          }\r\n        }),\r\n        R.toPairs,\r\n      )(state.view)\r\n      return R.assoc(\"view\", R.remove(index, 1, instance), state)\r\n    }\r\n    case CREATE_WINDOW: {\r\n      const window = {\r\n        appid: action.payload.appid,\r\n        title: action.payload.title,\r\n        width: action.payload.width,\r\n        height: action.payload.height,\r\n        url: action.payload.url,\r\n        single: action.payload.single,\r\n        deletable: action.payload.deletable\r\n      }\r\n      return R.compose(\r\n        save,\r\n        R.assocPath([\"apps\", action.payload.appid], window)\r\n      )(state)\r\n    }\r\n    case UPDATE_INDEX: {\r\n      const { viewid } = action.payload\r\n      const length = R.length(state.view)\r\n      const index = R.findIndex(R.propEq(\"viewid\", viewid))(R.prop(\"view\", state));\r\n      const zIndex = R.path([\"view\", Number(index), \"zIndex\"], state)\r\n      if (R.pathEq([\"view\", Number(index), \"zIndex\"], length, state)) {\r\n        return state\r\n      }\r\n      const instance = R.compose(\r\n        R.map(([index, win]) => {\r\n          const fviewid = R.prop(\"viewid\", win)\r\n          const fzIndex = R.prop(\"zIndex\", win)\r\n          if (R.equals(fviewid, viewid)) {\r\n            return R.assoc(\"zIndex\", Number(length), win)\r\n          }\r\n          else {\r\n            if (Number(fzIndex) > zIndex) {\r\n              return R.assoc(\"zIndex\", Number(fzIndex) - 1, win)\r\n            }\r\n            else {\r\n              return R.assoc(\"zIndex\", fzIndex, win)\r\n            }\r\n          }\r\n        }),\r\n        R.toPairs,\r\n      )(state.view)\r\n      return R.assoc(\"view\", instance, state)\r\n    }\r\n    case MINIMIZE_WINDOW: {\r\n      const { index } = action.payload\r\n      const updateIn = R.curry((path, val, obj) => R.compose(\r\n        R.set(R.__, val, obj),\r\n        R.apply(R.compose),\r\n        R.map(R.cond([[R.is(Number), R.lensIndex], [R.T, R.lensProp]]))\r\n      )(path));\r\n      return updateIn([\"view\", Number(index), \"minimized\"], true, state);\r\n\r\n    }\r\n    case UNMINIMIZE_WINDOW: {\r\n      const { index } = action.payload\r\n      return updateIn([\"view\", Number(index), \"minimized\"], false, state);\r\n\r\n    }\r\n\r\n    case UNMINIMIZE_UPDATE_INDEX: {\r\n      const { viewid } = action.payload\r\n      const length = R.length(state.view)\r\n      const index = R.findIndex(R.propEq(\"viewid\", viewid))(R.prop(\"view\", state));\r\n      const zIndex = R.path([\"view\", Number(index), \"zIndex\"], state)\r\n\r\n\r\n      const min = updateIn([\"view\", Number(index), \"minimized\"], false, state)\r\n      if (R.pathEq([\"view\", Number(index), \"zIndex\"], length, state)) {\r\n        return min\r\n      }\r\n      const instance = R.compose(\r\n        R.map(([index, win]) => {\r\n          const fviewid = R.prop(\"viewid\", win)\r\n          const fzIndex = R.prop(\"zIndex\", win)\r\n          if (R.equals(fviewid, viewid)) {\r\n            return R.assoc(\"zIndex\", Number(length), win)\r\n          }\r\n          else {\r\n            if (Number(fzIndex) > zIndex) {\r\n              return R.assoc(\"zIndex\", Number(fzIndex) - 1, win)\r\n            }\r\n            else {\r\n              return R.assoc(\"zIndex\", fzIndex, win)\r\n            }\r\n          }\r\n        }),\r\n        R.toPairs\r\n      )(min.view)\r\n      console.log(\"instance is: \", instance)\r\n      return R.assoc(\"view\", instance, state)\r\n    }\r\n\r\n    case HIDE_WINDOW_ID: {\r\n      const { viewid } = action.payload\r\n      const index = R.findIndex(R.propEq(\"viewid\", viewid))(R.prop(\"view\", state));\r\n      delete opened[R.path([\"view\", index, \"appid\"], state)]\r\n      const zIndex = R.path([\"view\", Number(index), \"zIndex\"], state)\r\n      const length = R.length(state.view)\r\n      const instance = R.compose(\r\n        R.map(([index, win]) => {\r\n          const fviewid = R.prop(\"viewid\", win)\r\n          const fzIndex = R.prop(\"zIndex\", win)\r\n          if (R.equals(fviewid, viewid)) {\r\n            return R.assoc(\"zIndex\", Number(length), win)\r\n          }\r\n          else {\r\n            if (Number(fzIndex) > zIndex) {\r\n              return R.assoc(\"zIndex\", Number(fzIndex) - 1, win)\r\n            }\r\n            else {\r\n              return R.assoc(\"zIndex\", fzIndex, win)\r\n            }\r\n          }\r\n        }),\r\n        R.toPairs,\r\n      )(state.view)\r\n      return R.assoc(\"view\", R.remove(index, 1, instance),state)\r\n    }\r\n    case DELETE_WINDOW: {\r\n      const { appid } = action.payload\r\n      return R.compose(\r\n        save,\r\n        R.dissocPath([\"apps\", appid]),\r\n        R.assoc(\"view\", R.filter(view => {\r\n          return !R.propEq(\"appid\", appid, view)\r\n        }, state.view)\r\n        ))(state)\r\n\r\n    }\r\n    case LOAD_APPS: {\r\n      return load(state)\r\n    }\r\n\r\n    case RESET_DEFAULT: {\r\n      opened = {}\r\n      appView = 0\r\n      return R.compose(\r\n        save,\r\n        R.assoc(\"apps\", BUILT_IN_APPS),\r\n        R.assoc(\"view\", [])\r\n      )(state)\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { TOGGLE_SETTINGS} from \"../actionTypes\";\r\nimport * as R from 'ramda'\r\n\r\nconst initialState = {\r\n    showing: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case TOGGLE_SETTINGS: {\r\n      const {showing} = action.payload\r\n      return R.assoc(\"showing\", showing, state)\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport windows from \"./windows\";\r\nimport settings from \"./settings\"\r\n\r\nexport default combineReducers({ windows, settings });\r\n","import { createStore, compose } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nconst enhancers = compose(\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    );\r\nexport default createStore(rootReducer,  enhancers);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport WidgetManager from './main/WidgetManager';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render( <Provider store={store}><WidgetManager /></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}